'use client'

import { MacbookScroll } from '@/components/molecules/macbook-scroll'
import Image from 'next/image'
import { useRef } from 'react'
import { useScroll } from 'framer-motion'
import Autoplay from 'embla-carousel-autoplay'

import { Card, CardContent } from '@/components/atoms/card'
import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from '@/components/atoms/carousel'
import { cn } from '@/libs/utils'

export default function MainTemplates() {
  const ref = useRef<HTMLDivElement>(null)
  const plugin = useRef(Autoplay({ delay: 2000, stopOnInteraction: true }))
  const { scrollYProgress } = useScroll({
    target: ref,
    offset: ['start start', 'end start']
  })

  const sectionTwo = (isLid: boolean) => {
    return (
      <div ref={ref} className={cn('flex flex-col mb-20', isLid ? 'gap-16' : 'gap-20')}>
        <h2 className={cn('text-center', isLid ? 'text-3xl font-bold' : 'text-4xl font-extrabold')}>
          OTOMATA s·∫Ω l√†m g√¨ cho b·∫°n ?
        </h2>
        {data.map(({ image, content }, index) => (
          <div key={index} className={cn('grid grid-cols-2', isLid ? 'gap-8' : 'gap-10')}>
            <Image
              src={image}
              alt={`image-${index}`}
              height='500'
              width='500'
              className={cn('w-full h-full p-4 object-cover', index % 2 ? 'order-first' : 'order-last')}
            />
            <div className={cn('flex flex-col justify-center', index % 2 ? 'order-last' : 'order-first')}>
              <div className={'text-xl'}>{content}</div>
            </div>
          </div>
        ))}
      </div>
    )
  }

  return (
    <div>
      <div className='overflow-hidden dark:bg-[#0B0B0F] bg-white w-full'>
        <MacbookScroll
          title={
            <div className={'max-w-[800px] flex flex-col gap-5 text-center'}>
              <h1 className={'text-5xl font-extrabold'}>
                ƒê√™m OT ta ƒëi ƒÉn üçú <br /> Task g√¨ vi·ªác g√¨ tool n√†y lo h·∫øt
              </h1>
              <p className={'text-xl text-color'}>
                OTOMATA l√† d·ª± √°n freelance ƒë∆∞·ª£c ra ƒë·ªùi ƒë·ªÉ gi√∫p üí™ c√°c anh ch·ªã em vƒÉn ph√≤ng t·ª± ƒë·ªông ho√° nh·ªØng c√¥ng vi·ªác
                vƒÉn ph√≤ng trong c√¥ng ty, ch·ªâ v·ªõi v√†i ng√†y l∆∞∆°ng v√† v√†i c√∫ click.
              </p>
            </div>
          }
          content={<div className={'container-content'}>{sectionTwo(true)}</div>}
          showGradient={false}
        />
      </div>
      <div className={'container-content'}>{sectionTwo(false)}</div>
      <div className={'container-content'}>
        <Carousel
          plugins={[plugin.current]}
          className='w-full max-w-xs'
          onMouseEnter={plugin.current.stop}
          onMouseLeave={plugin.current.reset}
        >
          <CarouselContent>
            {Array.from({ length: 5 }).map((_, index) => (
              <CarouselItem key={index}>
                <div className='p-1'>
                  <Card>
                    <CardContent className='flex aspect-square items-center justify-center p-6'>
                      <span className='text-4xl font-semibold'>{index + 1}</span>
                    </CardContent>
                  </Card>
                </div>
              </CarouselItem>
            ))}
          </CarouselContent>
          <CarouselPrevious />
          <CarouselNext />
        </Carousel>
      </div>
    </div>
  )
}

const data = [
  {
    image: '/images/placeholder-image.svg',
    content: (
      <p className={'text-color'}>
        {' '}
        Ch·∫°y lu·ªìng c√¥ng vi·ªác ph·ª©c t·∫°p v·ªõi tool ƒë∆∞·ª£c thi·∫øt k·∫ø ri√™ng cho b·∫°n ho·∫∑c c√¥ng ty b·∫°n, v·ªõi quy tr√¨nh d·ªÖ hi·ªÉu v√†
        ƒë∆°n gi·∫£n. <br /> B·∫°n ƒë·∫∑t l·ªãch t∆∞ v·∫•n, ƒë·ª£i m√¨nh l√†m xong app giao cho b·∫°n, b·∫°n nh·∫≠p li·ªáu, b·∫°n c·∫•u h√¨nh tool r·ªìi
        b·∫•m n√∫t ch·∫°y.{' '}
      </p>
    )
  },
  {
    image: '/images/placeholder-image.svg',
    content: (
      <p className={'text-color'}>
        T·ª± ƒë·ªông ho√° nh·ªØng quy tr√¨nh, nghi·ªáp v·ª• th·ªß c√¥ng b·∫°n ph·∫£i l√†m ƒëi l√†m l·∫°i quanh nƒÉm su·ªët th√°ng.
        <br />
        C√≥ th·ªÉ t·ª± ƒë·ªông ho√° nh·ªØng quy tr√¨nh ng√µ ng√°ch m√† nh·ªØng s·∫£n ph·∫©m t·ª± ƒë·ªông ho√° tr√™n th·ªã tr∆∞·ªùng ch∆∞a c√≥ l√†m ƒë∆∞·ª£c.
      </p>
    )
  },
  {
    image: '/images/placeholder-image.svg',
    content: (
      <p className={'text-color'}>
        {' '}
        B·∫£o h√†nh 3 th√°ng sau khi giao tool.
        <br />
        ƒê∆∞·ª£c h·ªó tr·ª£ 30% chi ph√≠ thi·∫øt k·∫ø l·∫°i tool khi task vƒÉn ph√≤ng b·∫°n c√≥ x·∫£y ra thay ƒë·ªïi
      </p>
    )
  }
]
